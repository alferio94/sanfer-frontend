// src/app/shared/components/image-cropper-modal/image-cropper-modal.component.scss
.image-cropper-modal {
  display: flex;
  flex-direction: column;
  max-height: 90vh;
  min-width: 800px;
  max-width: 1200px;
  width: 100%;

  @media (max-width: 768px) {
    min-width: 100%;
    max-height: 100vh;
  }
}

.modal-header {
  padding: 1.5rem;
  border-bottom: 1px solid var(--mat-sys-outline-variant);
  background: var(--mat-sys-surface);

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 1rem;
  }

  .header-title {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    flex: 1;

    .header-icon {
      color: var(--mat-sys-primary);
      font-size: 1.5rem;
      margin-top: 0.25rem;
    }

    .title-text {
      h2 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--mat-sys-on-surface);
        line-height: 1.2;
      }

      .subtitle {
        margin: 0.25rem 0 0 0;
        color: var(--mat-sys-on-surface-variant);
        font-size: 0.875rem;
        line-height: 1.3;
      }
    }
  }

  .close-button {
    color: var(--mat-sys-on-surface-variant);
    flex-shrink: 0;

    &:hover {
      background: var(--mat-sys-surface-variant);
    }
  }
}

.modal-body {
  flex: 1;
  overflow-y: auto;
  padding: 1.5rem;
  background: var(--mat-sys-surface-container-lowest);
}

.error-container,
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem;
  text-align: center;
  gap: 1rem;

  .error-icon {
    font-size: 3rem;
    color: var(--mat-sys-error);
  }

  h3 {
    margin: 0;
    color: var(--mat-sys-on-surface);
  }

  p {
    margin: 0;
    color: var(--mat-sys-on-surface-variant);
  }
}

.cropper-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.image-info {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  padding: 1rem;
  background: var(--mat-sys-surface-container);
  border-radius: 0.5rem;

  .info-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    .label {
      font-weight: 500;
      color: var(--mat-sys-on-surface-variant);
      font-size: 0.875rem;
    }

    .value {
      font-weight: 600;
      color: var(--mat-sys-on-surface);
      font-size: 0.875rem;
      text-align: right;
    }
  }
}

.cropper-section {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.cropper-wrapper {
  background: var(--mat-sys-surface-container);
  border-radius: 0.5rem;
  padding: 1rem;
  min-height: 400px;
  max-height: 70vh;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;

  // ngx-image-cropper CSS Variables integration
  --cropper-outline-color: transparent;
  --cropper-overlay-color: var(--mat-sys-surface-container);
  --cropper-color: var(--mat-sys-primary);
  --cropper-border: 2px solid var(--mat-sys-primary);
  --cropper-hover-border: 2px solid var(--mat-sys-primary);
  --cropper-focus-border: 3px solid var(--mat-sys-primary);
  --cropper-resize-square-bg: var(--mat-sys-primary);
  --cropper-resize-square-border: 2px solid var(--mat-sys-surface);
  --cropper-resize-square-hover-bg: var(--mat-sys-primary);
  --cropper-resize-square-hover-border: 2px solid var(--mat-sys-surface);
  --cropper-resize-square-focus-bg: var(--mat-sys-primary);
  --cropper-resize-square-focus-border: 2px solid var(--mat-sys-surface);

  ::ng-deep {
    image-cropper {
      width: 100%;
      height: 100%;
      max-width: 100%;
      max-height: 100%;
      display: block;
    }

    .ngx-ic-main {
      width: 100% !important;
      height: 100% !important;
      max-width: 100% !important;
      max-height: 100% !important;
    }

    .ngx-ic-source-image {
      max-width: 100% !important;
      max-height: 100% !important;
      width: auto !important;
      height: auto !important;
      object-fit: contain !important;
    }

    .ngx-ic-move {
      cursor: move;
    }

    .ngx-ic-resize {
      cursor: nw-resize;
    }

    // Apply theme colors to cropper overlay
    .ngx-ic-overlay {
      background: rgba(0, 0, 0, 0.4);
    }

    // Ensure cropper border uses theme colors
    .ngx-ic-cropper {
      border: var(--cropper-border);

      &:hover {
        border: var(--cropper-hover-border);
      }

      &:focus {
        border: var(--cropper-focus-border);
        outline: none;
      }
    }

    // Style resize handles
    .ngx-ic-resize-handle {
      background: var(--cropper-resize-square-bg);
      border: var(--cropper-resize-square-border);
      border-radius: 2px;

      &:hover {
        background: var(--cropper-resize-square-hover-bg);
        border: var(--cropper-resize-square-hover-border);
      }
    }
  }

  .cropper-loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    padding: 3rem;
    color: var(--mat-sys-on-surface-variant);

    p {
      margin: 0;
      font-size: 0.875rem;
    }
  }
}

.drop-zone-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 400px;
  padding: 2rem;
}

.drop-zone {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1.5rem;
  padding: 3rem;
  border: 2px dashed var(--mat-sys-outline);
  border-radius: 0.75rem;
  background: var(--mat-sys-surface-container);
  transition: all 0.3s ease;
  cursor: pointer;
  min-height: 300px;
  width: 100%;
  max-width: 500px;
  text-align: center;

  &:hover {
    border-color: var(--mat-sys-primary);
    background: var(--mat-sys-surface-container-high);
  }

  &.drag-over {
    border-color: var(--mat-sys-primary);
    background: var(--mat-sys-primary-container);
    transform: scale(1.02);
  }

  .drop-icon {
    font-size: 4rem;
    width: 4rem;
    height: 4rem;
    color: var(--mat-sys-on-surface-variant);
    transition: color 0.3s ease;
  }

  &:hover .drop-icon,
  &.drag-over .drop-icon {
    color: var(--mat-sys-primary);
  }

  h3 {
    margin: 0;
    color: var(--mat-sys-on-surface);
    font-size: 1.5rem;
    font-weight: 500;
  }

  p {
    margin: 0;
    color: var(--mat-sys-on-surface-variant);
    font-size: 1rem;
  }

  .select-button {
    margin-top: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .file-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    margin-top: 1rem;

    small {
      color: var(--mat-sys-on-surface-variant);
      font-size: 0.75rem;
    }
  }
}

.controls-section {
  background: var(--mat-sys-surface-container);
  border-radius: 0.5rem;
  padding: 1.5rem;

  .controls-group {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;

    h4 {
      margin: 0;
      font-size: 1rem;
      font-weight: 600;
      color: var(--mat-sys-on-surface);
    }
  }

  .control-item {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;

    .control-label {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 500;
      color: var(--mat-sys-on-surface-variant);
      font-size: 0.875rem;

      mat-icon {
        font-size: 1.125rem;
      }
    }

    .zoom-slider {
      width: 100%;
      margin: 0.5rem 0;
    }

    .zoom-value {
      font-weight: 600;
      color: var(--mat-sys-on-surface);
      font-size: 0.875rem;
      text-align: center;
    }

    .rotation-buttons,
    .flip-buttons {
      display: flex;
      align-items: center;
      gap: 0.5rem;

      .rotation-value {
        font-weight: 600;
        color: var(--mat-sys-on-surface);
        font-size: 0.875rem;
        min-width: 3rem;
        text-align: center;
      }

      button {
        &.active {
          background: var(--mat-sys-primary-container);
          color: var(--mat-sys-on-primary-container);
        }
      }
    }

    .reset-button {
      align-self: flex-start;
      border-color: var(--mat-sys-outline);
      color: var(--mat-sys-on-surface);

      &:hover {
        background: var(--mat-sys-surface-variant);
      }
    }
  }
}

.modal-footer {
  padding: 1.5rem;
  border-top: 1px solid var(--mat-sys-outline-variant);
  background: var(--mat-sys-surface);

  .footer-actions {
    display: flex;
    justify-content: flex-end;
    gap: 1rem;

    .cancel-button {
      color: var(--mat-sys-on-surface-variant);
    }

    .crop-button {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      min-width: 160px;

      &:disabled {
        opacity: 0.6;
      }

      mat-spinner {
        margin-right: 0.5rem;
      }
    }
  }
}

// Responsive design
@media (max-width: 768px) {
  .image-cropper-modal {
    min-width: 100%;
    max-height: 100vh;
  }

  .modal-header {
    padding: 1rem;

    .header-title {
      .title-text h2 {
        font-size: 1.25rem;
      }
    }
  }

  .modal-body {
    padding: 1rem;
  }

  .cropper-section {
    grid-template-columns: 1fr;
  }

  .cropper-wrapper {
    min-height: 300px;
  }

  .preview-section {
    min-width: auto;
  }

  .controls-section {
    padding: 1rem;
  }

  .modal-footer {
    padding: 1rem;

    .footer-actions {
      flex-direction: column;
      gap: 0.5rem;

      .crop-button {
        min-width: auto;
      }
    }
  }
}

// Dark mode specific adjustments
@media (prefers-color-scheme: dark) {
  .cropper-wrapper {
    --cropper-outline-color: transparent;
    --cropper-overlay-color: var(--mat-sys-surface-container);
    --cropper-color: var(--mat-sys-primary);
    --cropper-border: 2px solid var(--mat-sys-primary);
    --cropper-hover-border: 2px solid var(--mat-sys-primary);
    --cropper-focus-border: 3px solid var(--mat-sys-primary);
    --cropper-resize-square-bg: var(--mat-sys-primary);
    --cropper-resize-square-border: 2px solid var(--mat-sys-surface);

    ::ng-deep {
      .ngx-ic-overlay {
        background: rgba(0, 0, 0, 0.7);
      }
    }
  }
}
